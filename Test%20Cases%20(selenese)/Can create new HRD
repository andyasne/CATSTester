using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;

namespace SeleniumTests
{
    [TestFixture]
    public class CanCreateNewHRD
    {
        private IWebDriver driver;
        private StringBuilder verificationErrors;
        private string baseURL;
        private bool acceptNextAlert = true;
        
        [SetUp]
        public void SetupTest()
        {
            driver = new FirefoxDriver();
            baseURL = "http://localhost:1787/";
            verificationErrors = new StringBuilder();
        }
        
        [TearDown]
        public void TeardownTest()
        {
            try
            {
                driver.Quit();
            }
            catch (Exception)
            {
                // Ignore errors if unable to close the browser
            }
            Assert.AreEqual("", verificationErrors.ToString());
        }
        
        [Test]
        public void TheCanCreateNewHRDTest()
        {
            driver.Navigate().GoToUrl(baseURL + "/Login?ReturnUrl=%2f");
            driver.FindElement(By.XPath("//input[@id='login-username']")).Clear();
            driver.FindElement(By.XPath("//input[@id='login-username']")).SendKeys("earlywarning");
            driver.FindElement(By.XPath("//input[@id='login-password']")).Clear();
            driver.FindElement(By.XPath("//input[@id='login-password']")).SendKeys("P@ssw0rdcats");
            driver.FindElement(By.XPath("//button[@id='login-btn']")).Click();
            driver.FindElement(By.LinkText("Plans")).Click();
            driver.FindElement(By.LinkText("HRD")).Click();
            driver.FindElement(By.XPath("(//button[@type='button'])[2]")).Click();
            driver.FindElement(By.XPath("//input[@id='Plan_PlanName']")).Clear();
            driver.FindElement(By.XPath("//input[@id='Plan_PlanName']")).SendKeys("testhrdname1yh");
            driver.FindElement(By.XPath("//input[@id='Year']")).Clear();
            driver.FindElement(By.XPath("//input[@id='Year']")).SendKeys("2010");
            driver.FindElement(By.XPath("//input[@id='Plan_StartDate']")).Clear();
            driver.FindElement(By.XPath("//input[@id='Plan_StartDate']")).SendKeys("2/2/2010");
            new SelectElement(driver.FindElement(By.XPath("//select[@id='SeasonID']"))).SelectByText("Belg");
            driver.FindElement(By.XPath("//input[@id='Plan_Duration']")).Clear();
            driver.FindElement(By.XPath("//input[@id='Plan_Duration']")).SendKeys("5");
            new SelectElement(driver.FindElement(By.XPath("//select[@id='RationID']"))).SelectByText("Ration-Default");
            driver.FindElement(By.XPath("(//button[@type='submit'])[2]")).Click();
            // testing
            // ERROR: Caught exception [ERROR: Unsupported command [getTable | css=div.k-grid-content > table.0.0 | ]]
            // ERROR: Caught exception [ERROR: Unsupported command [getTable | css=div.k-grid-content > table.0.1 | ]]
            // ERROR: Caught exception [ERROR: Unsupported command [getTable | css=div.k-grid-content > table.0.2 | ]]
            Assert.AreEqual("30-Jun-2010", driver.FindElement(By.XPath("//div[@id='grid']/div[2]/table/tbody/tr/td[4]")).Text);
            // delete the entered data
            driver.FindElement(By.LinkText("Delete")).Click();
            driver.FindElement(By.XPath("//button[@id='yes-delete']")).Click();
        }
        private bool IsElementPresent(By by)
        {
            try
            {
                driver.FindElement(by);
                return true;
            }
            catch (NoSuchElementException)
            {
                return false;
            }
        }
        
        private bool IsAlertPresent()
        {
            try
            {
                driver.SwitchTo().Alert();
                return true;
            }
            catch (NoAlertPresentException)
            {
                return false;
            }
        }
        
        private string CloseAlertAndGetItsText() {
            try {
                IAlert alert = driver.SwitchTo().Alert();
                string alertText = alert.Text;
                if (acceptNextAlert) {
                    alert.Accept();
                } else {
                    alert.Dismiss();
                }
                return alertText;
            } finally {
                acceptNextAlert = true;
            }
        }
    }
}
